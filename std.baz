// This is the Standard Library of the Bazinga! programming language.

// ----- Linked List ------
class Node {

    init(data) {
        this.data = data;
        this.next = nil;
    }

}

class LinkedList {
    
    init() {
        this.head = nil;
    }

    append(data) {
        var newNode = Node(data);
        if (this.head == nil) {
            this.head = newNode;
        } else {
            var currentNode = this.head;
            while (currentNode.next != nil) {
                currentNode = currentNode.next;
            }
            currentNode.next = newNode;
        }
    }

    toString() {
        var currentNode = this.head;
        while (currentNode != nil) {
            eureka currentNode.data;
            currentNode = currentNode.next;
        }
    }

}

// ---- contains(array, target) ----
fun contains(array, target) {
    var found = false;
    
    for (var i = 0; i < array.length; i = i + 1) {
        if (array.get(i) == target) {
            found = true;
        }
    }

    bazinga found;
}

// ---- convertArrayToNumbersArray(array) ----
fun convertArrayToNumbersArray(array) {

    var numbersArray = Array(array.length);

    for (var i = 0; i < array.length; i = i + 1) {
        var value = Number(array.get(i));
        numbersArray.set(i, value);
    }

    bazinga numbersArray;

}